---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-authorizer-deployment
  namespace: my-auth
  labels:
    app: authorizer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: authorizer
  template:
    metadata:
      labels:
        app: authorizer
    spec:
      containers:
      - name: authorizer
        image: lakhansamani/authorizer:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-url
              key: database_url
        - name: DATABASE_TYPE
          value: sqlite
        - name: REDIS_URL
          value: redis://redis.my-auth.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  name: my-authorizer-service
  namespace: my-auth
  labels:
    app: authorizer
spec:
  selector:
    app: authorizer
  type: ClusterIP
  ports:
  - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-authorizer-ingress
  namespace: my-auth
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  defaultBackend:
    service:
      name: my-authorizer-service
      port:
        number: 8080
  # rules:
  # - http:
  #     paths:
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: my-authorizer-service
  #           port:
  #             number: 8080